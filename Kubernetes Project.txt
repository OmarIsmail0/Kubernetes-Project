Project Steps:
1. Set Up KinD Cluster:
	•	Install KinD on your local machine: KinD Installation			-/-
	•	Create a KinD cluster											-/-
	•	Verify that the cluster is running								-/-
2. Docker:
	•	Dockerfile:
	•	Create a Dockerfile for a simple web application that says
		 “hello from <your-name> (e.g., an nginx server).				-/-
	•	Build the Docker image.											-/-
	•	Push the docker image											-/-
	•	Docker Containers:
	•	Run a Docker container using the built image					-/-
	•	Verify that the container is running							-/-
3. Kubernetes:
	•	Deployment:
	•	Create a Deployment YAML file for the web application.			-/-
	•	Apply the Deployment to the KinD cluster						-/-
	•	Verify the Deployment and its Pods								-/-
	•	Service:
	•	Create a Service YAML file to expose the Deployment.			-/-
	•	Apply the Service to the KinD cluster							-/-
	•	Access the service within the cluster							-/-
	•	Ingress:
	•	Install NGINX Ingress Controller: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
	•	Create an Ingress YAML file to expose the service externally.   
	•	Apply the Ingress to the KinD cluster
	•	Access the service externally using the Ingress endpoint.
	•	ConfigMap and Secret:
	•	Create ConfigMap and Secret YAML files with sample data.
	•	Apply the ConfigMap and Secret to the KinD cluster
	•	Use the ConfigMap and Secret in a Pod YAML file and deploy it to the cluster.
	•	PersistentVolume and PersistentVolumeClaim:
	•	Create PersistentVolume and PersistentVolumeClaim YAML files with sample configurations.
	•	Apply the PersistentVolume and PersistentVolumeClaim to the KinD cluster
	•	Mount the PersistentVolumeClaim to a Pod and deploy it to the cluster.
